# Generated by Django 3.2.8 on 2023-03-19 10:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Basics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basics_id', models.IntegerField()),
                ('percentile', models.FloatField(blank=True, null=True)),
                ('run_date', models.DateTimeField(blank=True, null=True)),
                ('violation_threshold', models.FloatField(blank=True, null=True)),
                ('exceeded_fmcsa_intervention_threshold', models.FloatField(blank=True, null=True)),
                ('measure_value', models.FloatField(blank=True, null=True)),
                ('on_road_performance_threshold_violation_indicator', models.CharField(blank=True, max_length=100, null=True)),
                ('serious_violation_investigation_past_12month_Indicator', models.CharField(blank=True, max_length=100, null=True)),
                ('total_inspection_with_violation', models.IntegerField(blank=True, null=True)),
                ('total_violation', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=50, null=True)),
                ('modified_by', models.CharField(max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('dba', models.CharField(blank=True, max_length=255, null=True)),
                ('legal_name', models.CharField(max_length=255, verbose_name='Company legal name')),
                ('dot', models.IntegerField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('incorporation_date', models.DateField(blank=True, null=True, verbose_name='Date of Incorporation')),
                ('motor_carrier_number', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999999)])),
                ('ein', models.IntegerField(blank=True, null=True)),
                ('census_type', models.CharField(blank=True, max_length=20, null=True)),
                ('total_driver', models.IntegerField(blank=True, null=True)),
                ('carrier_operation', models.CharField(blank=True, max_length=50, null=True)),
                ('common_authority_status', models.CharField(blank=True, max_length=5, null=True)),
                ('contract_authority_status', models.CharField(blank=True, max_length=5, null=True)),
                ('docket_number', models.CharField(blank=True, max_length=15, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperationClasfication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operaton_classfication_id', models.IntegerField()),
                ('operation_classification_description', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operaton_classfication', to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='LicensingAndInsurence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bipdInsuranceRequired', models.CharField(blank=True, max_length=5, null=True)),
                ('bipdInsuranceOnFile', models.IntegerField(blank=True, null=True)),
                ('bipdRequiredAmount', models.IntegerField(blank=True, null=True)),
                ('bondInsuranceOnFile', models.IntegerField(blank=True, null=True)),
                ('bondInsuranceRequired', models.CharField(blank=True, max_length=5, null=True)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='insurance', to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=50)),
                ('insurance_carrier', models.CharField(blank=True, max_length=255, null=True)),
                ('policy_surety', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('coverage_from', models.CharField(max_length=10)),
                ('coverage_to', models.CharField(max_length=10)),
                ('effective_date_from', models.DateField(blank=True, null=True)),
                ('effective_date_to', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_history', to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='Crash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crash_total', models.IntegerField()),
                ('fatal_crash', models.IntegerField()),
                ('injury_crash', models.IntegerField()),
                ('towaway_crash', models.IntegerField()),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='crashes', to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyRepresentative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Representative mail')),
                ('address_1', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Address Line 1')),
                ('address_2', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Address Line 2')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=50, verbose_name='State')),
                ('zip_code', models.CharField(max_length=10, verbose_name='Zip / Postal Code')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone Number')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='representatives', to='company.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=50, null=True)),
                ('address_type', models.CharField(blank=True, choices=[('B', 'Billing Adress'), ('O', 'Office Address')], default='B', max_length=20, null=True)),
                ('address_1', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Address Line 1')),
                ('address_2', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Address Line 2')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Company mail')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street')),
                ('state', models.CharField(max_length=50, verbose_name='State')),
                ('zip_code', models.CharField(max_length=10, verbose_name='Zip / Postal Code')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='company.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CargoCarried',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo_id', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargo', to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='BasicsEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('code_mcmis', models.CharField(blank=True, max_length=100, null=True)),
                ('long_description', models.CharField(blank=True, max_length=100, null=True)),
                ('short_description', models.CharField(blank=True, max_length=100, null=True)),
                ('basics', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='basics_entity', to='company.basics')),
            ],
        ),
        migrations.AddField(
            model_name='basics',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basics', to='company.company'),
        ),
        migrations.CreateModel(
            name='InspectionAndSafetyMeasures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazmat', models.CharField(choices=[('H', 'HAZMAT'), ('N', 'NON_HAZMAT')], default='H', max_length=20)),
                ('inspection_total', models.IntegerField(blank=True, null=True)),
                ('driver_inspection_total', models.IntegerField(blank=True, null=True)),
                ('driver_oos_inspection_total', models.IntegerField(blank=True, null=True)),
                ('vehicle_inspection_total', models.IntegerField(blank=True, null=True)),
                ('vehicle_oos_inspection_total', models.IntegerField(blank=True, null=True)),
                ('unsafe_driver_inspection_violation', models.IntegerField(blank=True, null=True)),
                ('unsafe_driver_measure', models.IntegerField(blank=True, null=True)),
                ('hos_driver_inspection_violation', models.IntegerField(blank=True, null=True)),
                ('hos_driver_measure', models.IntegerField(blank=True, null=True)),
                ('driver_fit_inspection_violation', models.IntegerField(blank=True, null=True)),
                ('driver_fit_measure', models.IntegerField(blank=True, null=True)),
                ('contr_subst_inspection_violation', models.IntegerField(blank=True, null=True)),
                ('contr_subst_measure', models.IntegerField(blank=True, null=True)),
                ('vehicle_maintenance_violation', models.IntegerField(blank=True, null=True)),
                ('vehicle_maintenance_measure', models.IntegerField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspection_safety', to='company.company')),
            ],
            options={
                'unique_together': {('company', 'hazmat')},
            },
        ),
    ]
